def safe_divide(a, b):
    """Пытается выполнить деление a на b.

    Если делитель b равен нулю, функция перехватывает исключение ZeroDivisionError
    и возвращает None вместо возникновения ошибки.

    Args:
        a (float): Делимое.
        b (float): Делитель.

    Returns:
        float or None: Результат деления, либо None, если b равен нулю.
    """
    try:
        # Пытаемся выполнить деление a на b
        result = a / b
    except ZeroDivisionError:
        # Если возникает деление на ноль, возвращаем None
        result = None
    return result


# Запуск функции safe_divide
if __name__ == "__main__":
    # Деление с ненулевым делителем
    print("10 / 2 =", safe_divide(10, 2))   # Ожидаемый результат: 5.0

    # Попытка деления на ноль
    print("7 / 0 =", safe_divide(7, 0))     # Ожидаемый результат: None

    # Еще один пример деления
    print("-15 / 3 =", safe_divide(-15, 3)) # Ожидаемый результат: -5.0

    # Пример с вещественными числами
    print("5.5 / 2.2 =", safe_divide(5.5, 2.2))  # Ожидаемый результат: 2.5
